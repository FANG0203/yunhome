<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ContractMapper">
    
    <resultMap type="Contract" id="ContractResult">
        <result property="id"    column="id"    />
        <result property="contractName"    column="contract_name"    />
        <result property="contractContext"    column="contract_context"    />
    </resultMap>

    <sql id="selectContractVo">
        select id, contract_name, contract_context from t_contract
    </sql>

    <select id="selectContractList" parameterType="Contract" resultMap="ContractResult">
        <include refid="selectContractVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="contractName != null  and contractName != ''"> and contract_name like concat('%', #{contractName}, '%')</if>
            <if test="contractContext != null  and contractContext != ''"> and contract_context like concat('%', #{contractContext}, '%')</if>
        </where>
    </select>
    
    <select id="selectContractById" parameterType="Integer" resultMap="ContractResult">
        <include refid="selectContractVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertContract" parameterType="Contract" useGeneratedKeys="true" keyProperty="id">
        insert into t_contract
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractName != null and contractName != ''">contract_name,</if>
            <if test="contractContext != null and contractContext != ''">contract_context,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contractName != null and contractName != ''">#{contractName},</if>
            <if test="contractContext != null and contractContext != ''">#{contractContext},</if>
         </trim>
    </insert>

    <update id="updateContract" parameterType="Contract">
        update t_contract
        <trim prefix="SET" suffixOverrides=",">
            <if test="contractName != null and contractName != ''">contract_name = #{contractName},</if>
            <if test="contractContext != null and contractContext != ''">contract_context = #{contractContext},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteContractById" parameterType="Integer">
        delete from t_contract where id = #{id}
    </delete>

    <delete id="deleteContractByIds" parameterType="String">
        delete from t_contract where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>